swagger: '2.0'
info:
  version: '1.0'
  title: Sunbird ItemSet API(s)
  termsOfService: 'https://github.com/project-sunbird/sunbird-commons/blob/master/LICENSE'
  contact:
    email: info@sunbird.org
  description: >-
      The ItemSet API resources perform operations related to all the _ItemSet_ on the Sunbird Platform. 
      
      - Each endpoint serves a different purpose. Depending on your need and purpose, choose the required endpoint
      
      - You can use the APIs to perform the Create, Update, Read, Delete, Review and Publish operations. 

      - The URL for Sunbird ItemSet API(s) is `api/itemset/v1`
host: staging.open-sunbird.org
basePath: /api/itemset/v1
securityDefinitions:
  bearer:
      type: apiKey  # The arbitrary name for the security scheme
      in: header # The security scheme parameter is in "header"
      name: Authorization # The name of the header, query parameter or cookie
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /create:
    post:
      description: >-
       This API is associated with creating an ItemSet on the Sunbird Platform.
          - The endpoint for **Create ItemSet** is `/create`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.

      summary: Create ItemSet
      tags:
        - ItemSet APIs
      operationId: Create ItemSet
      produces:
        - application/json
      parameters:
        - name: Body
          in: body
          required: true
          description: >-
           'The body parameter refers to the format of the request, the request body (payload) takes the following media types to make the payload:'
            
            - JSON 
            - XML data
          
           The body is the representation of the resource object to create an ItemSet (an array of parameters that describes the ItemSet)
          schema:
            $ref: '#/definitions/CreateItemSetRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content-Type entity is the media type of the resource.Possible media types can be:- 
              - application/json
        - name: x-channel-id
          in: header
          required: true
          type: string
          description: 'Represents an organization's unique ID to which the user belongs. For example, if the Sunbird tenant is set up for an organization that is a geographical State, it represents the ID provided to the State.'
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'Represents the User ID authorized to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Create ItemSet** operation was successful!
          schema:
            $ref: '#/definitions/ItemSetCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Create ItemSet** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: POST
            uri: /itemset/v1/create
            headers:
              Content-Type: application/json
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {
                  "itemset": {
                    "name": "Test ItemSet",
                    "description": "Test ItemSet",
                    "createdBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Create ItemSet
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiItemSetStreaming: false
  /update/{ItemSet_ID}:
     patch:
      description: >-
        This API is associated with updating the ItemSet on the Sunbird Platform.
          - The endpoint for **Update ItemSet** is `/update/{ItemSet_ID}`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.

      summary: Update ItemSet
      tags:
        - ItemSet APIs
      operationId: Update ItemSet
      produces:
        - application/json
      parameters:
        - in: path
          name: ItemSet_ID
          type: string
          required: true
          description: 'Please append a valid ItemSet ID To the Request URL'   
        - name: Body
          in: body
          required: true
          description: >- 
            The body parameter refers to the format of the request, the request body (payload) takes the following media types to make the payload:'
            
            - JSON
          
            The body is the representation of the resource object for updating the ItemSet.
          schema:
            $ref: '#/definitions/UpdateItemSetRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description: >-
            The Content-Type entity is the media type of the resource.Possible media types can be:- 
              - application/json
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'Represents the User ID authorized to execute the API.'
        - name: X-Channel-id
          in: header
          required: true
          type: string
          description: 'Represents an organization's unique ID to which the user belongs. For example, if the Sunbird tenant is set up for an organization that is a geographical State, it represents the ID provided to the State.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Update ItemSet** operation was successful!
          schema:
            $ref: '#/definitions/ItemSetCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Update ItemSet** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: PATCH
            uri: /itemset/v1/update/{ItemSet_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {
                  "itemset": {
                    "name": "string",
                    "description": "string"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Update ItemSet
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiItemSetStreaming: false
  /publish/{ItemSet_ID}:
    post:
      description: >-
        This API is associated with publishing ItemSet on the Sunbird Platform.
          - The endpoint for **Publish ItemSet** is `/publish/{ItemSet_ID}`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.

      summary: Publish ItemSet
      tags:
        - ItemSet APIs
      operationId: Publish ItemSet
      produces:
        - application/json
      parameters:
        - in: path
          name: ItemSet_ID
          type: string
          required: true
          description: 'Please append a valid ItemSet ID To the Request URL'
        - name: Body
          in: body
          required: true
          description: >- 
           'The body parameter refers to the format of the request, the request body (payload) takes the following media types to make the payload:'
            
            - JSON 
            - XML data
          
           The body is the representation of the resource object for publishing the ItemSet 
          schema:
            $ref: '#/definitions/PublishItemSetRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content-Type entity is the media type of the resource.Possible media types can be:- 
              - application/json
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'Represents the User ID authorizedto execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Publish ItemSet** operation was successful!
          schema:
            $ref: '#/definitions/ItemSetCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Publish ItemSet** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: POST
            uri: /itemset/v1/publish/{ItemSet_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {
                  "itemset": {
                    "lastPublishedBy": "89cf1a7e-dfd3-46c9-a428-d37e9a2bc001"
                  }
                }
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Publish ItemSet
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiItemSetStreaming: false
  /retire/{ItemSet_ID}:
    delete:
      description: >-
        This API is associated with retiring the ItemSet on the Sunbird Platform.
          - The endpoint for **Retire ItemSet** is `/retire/{ItemSet_ID}`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.

      summary: Retire ItemSet
      tags:
        - ItemSet APIs
      operationId: Retire ItemSet
      produces:
        - application/json
      parameters:
        - in: path
          name: ItemSet_ID
          type: string
          required: true
          description: 'Please append a valid ItemSet Id To the Request URL'
        - name: Body
          in: body
          required: true
          description: >-
           The body parameter refers to the format of the request, the request body (payload) takes the following media types to make the payload:'
            
            - JSON 
            - XML data
          
            The body is the representation of the resource object for retiring the ItemSet
          schema:
            $ref: '#/definitions/RetireItemSetRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The Content-Type entity is the media type of the resource.Possible media types can be:- 
              - Application/json
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'Represents the User ID registered to execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Retire ItemSet** operation was successful!
          schema:
            $ref: '#/definitions/ItemSetCreateResponse'
        '400':
          description: >-
            BAD REQUEST. The **Retire ItemSet** operation failed. You may have missed input for a mandatory parameter.
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: DELETE
            uri: /itemset/v1/retire/{ItemSet_Id}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
            body: |-
              {
                "request": {}
              }
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Retire ItemSet
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiItemSetStreaming: false
  /review/{ItemSet_ID}:
    post:
      description: >-
        This API is associated with the submission of the ItemSet for review on the Sunbird Platform.  
          - The endpoint for **Submit for Review** is `/review/{ItemSet_ID}`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.

      summary: Submit for Review
      tags:
        - ItemSet APIs
      operationId: Submit for Review
      produces:
        - application/json
      parameters:
        - in: path
          name: ItemSet_ID
          type: string
          required: true
          description: 'Please append a valid ItemSet ID To the Request URL'  
        - name: Body
          in: body
          required: true
          description: >-
            The body parameter refers to the format of the request, the request body (payload) takes the following media types to make the payload:'
            
            - JSON 
            - XML data
          
            The body is the representation of the resource object for  sending ItemSet for review
          schema:
            $ref: '#/definitions/ReviewItemSetRequest'
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The ItemSet Type entity is the media type of the resource.Possible media types can be:- 
              - application/json
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'Represents the User ID registeredto execute the API.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
      responses:
        '200':
          description: >-
            SUCCESS. The **ItemSet Sent for Review** operation was successful!
          schema:
            $ref: '#/definitions/ItemSetCreateResponse'
        '400':
          description: >-
            'BAD REQUEST. The **ItemSet Sent for Review** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: POST
            uri: /itemset/v1/review/{itemsetId}
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              Authorization: 'Bearer {{api_key}}'
            body: '{ }'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Submit for Review
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiItemSetStreaming: false
  /read/{ItemSet_ID}:
    get:
      description: >-
        This API is associated with viewing and reading out the ItemSet on the Sunbird Platform.
          - The endpoint for **Read ItemSet** is `/read/{ItemSet_ID}`
          - The fields marked with an asterisk (*) are mandatory. They cannot be null or empty.

      summary: Read ItemSet
      tags:
        - ItemSet APIs
      operationId: Read ItemSet
      produces:
        - application/json
      parameters:
        - in: path
          name: ItemSet_ID
          type: string
          required: true
          description: 'Please append a valid ItemSet ID To the Request URL' 
        - name: Content-Type
          in: header
          required: true
          type: string
          description:  >-
            The ItemSet Type entity is the media type of the resource.Possible media types can be:- 
              - application/json
        - name: X-Authenticated-Userid
          in: header
          required: true
          type: string
          description: 'Represents the User ID authorized to execute the API.'
        - name: X-Channel-id
          in: header
          required: true
          type: string
          description:  'Represents an organization's unique ID to which the user belongs. For example, if the Sunbird tenant is set up for an organization that is a geographical State, it represents the ID provided to the State.'
        - name: Authorization
          in: header
          required: true
          type: string
          description: 'To make use of the API, you require authorization. Raise a request to the administrator for the use of the API. You will receive the authorization key. Specify the key received, here.'
      responses:
        '200':
          description: >-
            SUCCESS. The **Read ItemSet** operation was successful!
          schema:
            $ref: '#/definitions/ItemSetGetResponse'
        '400':
          description: >-
            'BAD REQUEST. The **Read ItemSet** operation failed. You may have missed input for a mandatory parameter.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
        '500':
          description: >-
            'INTERNAL SERVER ERROR. We track these errors automatically and try to set it right at the earliest. Try refreshing the page. If the problem persists contact us at info@sunbird.org.'
          schema:
            $ref: '#/definitions/ItemSetCreateErrorResponse'
      security:
        - bearer: []
      x-unitTests:
        - request:
            method: GET
            uri: /itemset/v1/read/<itemsetId>
            headers:
              Content-Type: application/json
              X-Authenticated-Userid: '{{user_id}}'
              X-Channel-id: channel
              Authorization: 'Bearer {{api_key}}'
          expectedResponse:
            x-allowExtraHeaders: true
            x-bodyMatchMode: NONE
            x-arrayOrderedMatching: false
            x-arrayCheckCount: false
            x-matchResponseSchema: true
            headers: {}
          x-testShouldPass: true
          x-testEnabled: true
          x-testName: Read ItemSet
          x-testDescription: ''
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiItemSetStreaming: false     
definitions:
  CreateItemSetRequest:
    title: Create ItemSetRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ItemSetCreateItemSetObject'
    required:
      - request
  ItemSetCreateItemSetObject:
    title: ItemSetCreateItemSetObject
    type: object
    properties:
      itemset:
        $ref: '#/definitions/ItemSetCreateObject'
    required:
      - itemset
  ItemSetCreateObject:
    title: ItemSetCreateObject
    type: object
    properties:
      name:
        description: 'Represents the name of the ItemSet'
        type: string
      code:
        description: 'Represents the unique code for the ItemSet'
        type: string
      description:
        description: 'Description for the ItemSet'
        type: string
      createdBy:
        description: 'ID of the user who created ItemSet'
        type: string
    required:
      - name
      - code
  UpdateItemSetRequest:
    title: Update ItemSetRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ItemSetUpdateItemSetObject'
    required:
      - request
  ItemSetUpdateItemSetObject:
    title: ItemSetUpdateItemSetObject
    type: object
    properties:
      itemset:
        $ref: '#/definitions/ItemSetUpdateObject'
    required:
      - itemset
  ItemSetUpdateObject:
    title: ItemSetUpdateObject
    type: object
    properties:
      name:
        description: 'Represents the name of the ItemSet'
        type: string
      description:
        description: 'Description for the ItemSet'
        type: string
      children:
        description: 'Represents the child objects (AssessmentItem) associated with the ItemSet'
        type: array
        items:
          type: object
  PublishItemSetRequest:
    title: Publish ItemSetRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ItemSetPublishItemSetObject'
    required:
      - request
  ItemSetPublishItemSetObject:
    title: ItemSetPublishItemSetObject
    type: object
    properties:
      itemset:
        $ref: '#/definitions/ItemSetPublishObject'
    required:
      - ItemSet
  ItemSetPublishObject:
    title: ItemSetPublishObject
    type: object
    properties:
      lastPublishedBy:
        description: ''
        type: string
    required:
      - lastPublishedBy
  RetireItemSetRequest:
    title: Retire ItemSetRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ItemSetRetireObject'
    required:
      - request
  ItemSetRetireObject:
    title: ItemSetRetireObject
    type: object
  ReviewItemSetRequest:
    title: Review ItemSetRequest
    type: object
    properties:
      request:
        $ref: '#/definitions/ItemSetReviewObject'
    required:
      - request
  ItemSetReviewObject:
    title: ItemSetReviewObject
    type: object
  ItemSetCreateResponse:
    description: Create ItemSet Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithNodeId'
      - $ref: '#/definitions/ResponseHeader'
  ResultWithNodeId:
    title: Result Containing Node Id
    type: object
    properties:
      result:
        $ref: '#/definitions/NodeId'
  NodeId:
    title: Node Id
    type: object
    properties:
      identifier:
        type: string
        description: Identifier of the ItemSet
  ItemSetGetResponse:
    description: Get ItemSet Response
    type: object
    allOf:
      - $ref: '#/definitions/ResultWithItemSet'
      - $ref: '#/definitions/ResponseHeader'
  ResultWithItemSet:
    title: Result Containing ItemSet Object
    type: object
    properties:
      result:
        $ref: '#/definitions/ItemSetObject'
  ItemSetObject:
    title: Result Containing ItemSet Object
    type: object
    properties:
      itemset:
        $ref: '#/definitions/ItemSetProperties'
  ItemSetProperties:
    title: Node Id
    type: object
    properties:
      identifier:
        type: string
        description: It represents the Node 
      name:
        type: string
        description: It is the name given to a node
      code:
        type: string
        description: Represents the Node associated with other specific node
      description:
        type: string
        description: It denotes the description of ItemSet
      createdOn:
        type: string
        description: Represents the ItemSet creation date 
      children:
        type: array
        items:
          type: object
        description: Represents the child (AssessmentItem) associated with the ItemSet
      lastUpdatedOn:
        type: string
        description: Represents the date on which ItemSet was last updated
      lastUpdatedBy:
        type: string
        description: Represents the user who updated the ItemSet previously
      lastPublishedBy:
        type: string
        description: Represents the date on which ItemSet was last published
      lastPublishedOn:
        type: string
        description: Represents the date on which the ItemSet was last published
      status:
        type: string
        description: Represents the status of the ItemSet
      totalQuestions:
        type: number
        description: 'Total No of Questions'
  ResponseHeader:
    title: ResponseHeader
    type: object
    properties:
      id:
        type: string
        description: Represents the unique API Identifier
      ver:
        type: string
        description: Represents the API version information
      params:
        $ref: '#/definitions/ResponseParams'
      responseCode:
        type: object
        description: 'Represents the API response code'
  ResponseParams:
    title: Response Parameter
    type: object
    properties:
      resmsgid:
        type: string
        description: ID represents the response uniquely
      msgid:
        type: string
        description: Represents the unique ID of the response message
      err:
        type: string
        description: Represents the Error Code in case the execution fails
      status:
        type: string
        description: Represents the Response status when an API is called
      errmsg:
        type: string
        description: Represents the text that is part of response status
  EmptyResult:
    title: Empty Result
    type: object
    properties:
      result:
        type: object
        description: Empty Result
  ItemSetCreateErrorResponse:
    title: Create ItemSet Error Response
    type: object
    allOf:
      - $ref: '#/definitions/EmptyResult'
      - $ref: '#/definitions/ResponseHeader'
